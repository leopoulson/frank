include std

-- Promise interface
interface Promise =
          -- Promises are named, and have types...
          promise S R : Op S R -> {S -> R} -> Unit
          -- Likewise signals are named too.
        | signal N S : N -> S -> Unit

data Op S R = opInt

data Pid S R = done (Ref R) | waiting (Ref {S -> R})

client : {[Promise [Console]]Unit}
client! = promise opInt {x -> print "running "; ouint (x + 10); print " thanks!\n"}

server : {Int -> [Promise] Unit}
server x = signal opInt x


hdl : {List {S -> R}
    -> <Promise [Console]> Unit      -- client
    -> <Promise> Unit                -- server
    -> [Console] Unit}

hdl cbs <promise n cb -> client> <server> =
    hdl (snoc cbs cb) (client unit) (server!)


main : {[Console] Unit}
main! = hdl [] (<Console>(client!)) (<Console>(server 10))
